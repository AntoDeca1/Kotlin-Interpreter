Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMPTY
    READLINE

Grammar

Rule 0     S' -> program
Rule 1     expression -> MINUS expression
Rule 2     program -> statement_list
Rule 3     statement_list -> statement
Rule 4     statement_list -> statement_list statement
Rule 5     statement -> variable_declaration
Rule 6     statement -> function_declaration
Rule 7     statement -> function_calling
Rule 8     statement -> if_statement
Rule 9     statement -> while_statement
Rule 10    statement -> assignment
Rule 11    statement -> return_statement
Rule 12    statement -> print_statement
Rule 13    sync -> NEWLINE
Rule 14    return_statement -> RETURN expression
Rule 15    assignment -> ID EQUAL expression
Rule 16    function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
Rule 17    function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
Rule 18    function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
Rule 19    function_calling -> ID LPAREN parameter_list_calling RPAREN
Rule 20    function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
Rule 21    function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
Rule 22    function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
Rule 23    function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
Rule 24    function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN
Rule 25    parameter_list_calling -> parameter_calling
Rule 26    parameter_list_calling -> parameter_list_calling COMMA parameter_calling
Rule 27    parameter_list_declaration -> parameter_declaration
Rule 28    parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration
Rule 29    parameter_calling -> term
Rule 30    parameter_declaration -> ID COLONS type
Rule 31    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 32    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 33    if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
Rule 34    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
Rule 35    if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
Rule 36    if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE
Rule 37    while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 38    while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE
Rule 39    variable_declaration -> VAL ID COLONS type EQUAL expression
Rule 40    variable_declaration -> VAR ID COLONS type EQUAL expression
Rule 41    variable_declaration -> VAL ID EQUAL expression
Rule 42    variable_declaration -> VAR ID EQUAL expression
Rule 43    type -> INT
Rule 44    type -> STRING
Rule 45    type -> BOOLEAN
Rule 46    expression -> term
Rule 47    expression -> expression PLUS expression
Rule 48    expression -> expression MINUS expression
Rule 49    expression -> expression TIMES expression
Rule 50    expression -> expression DIVIDE expression
Rule 51    expression -> expression LOGICAL_AND expression
Rule 52    expression -> expression LOGICAL_OR expression
Rule 53    expression -> expression LOGICAL_EQUAL expression
Rule 54    expression -> LOGICAL_NOT expression
Rule 55    expression -> expression GREATER_THAN expression
Rule 56    expression -> expression LESS_THAN expression
Rule 57    expression -> expression NOT_EQUAL expression
Rule 58    expression -> expression GREATER_THAN_EQUAL expression
Rule 59    expression -> expression LESS_THAN_EQUAL expression
Rule 60    expression -> LPAREN expression RPAREN
Rule 61    print_statement -> PRINT LPAREN expression RPAREN
Rule 62    term -> Literal
Rule 63    term -> ID
Rule 64    Literal -> INTEGER_LITERAL
Rule 65    Literal -> TRUE
Rule 66    Literal -> FALSE
Rule 67    Literal -> STRING_LITERAL

Terminals, with rules where they appear

BOOLEAN              : 45
COLONS               : 16 20 21 30 39 40
COMMA                : 26 28
DIVIDE               : 50
ELSE                 : 32 33 34 35
EMPTY                : 
EQUAL                : 15 20 21 22 23 24 39 40 41 42
FALSE                : 66
FUN                  : 16 17 18
GREATER_THAN         : 55
GREATER_THAN_EQUAL   : 58
ID                   : 15 16 17 18 19 20 20 21 21 22 22 23 23 24 24 30 39 40 41 42 63
IF                   : 31 32 33 34 35 36
INT                  : 43
INTEGER_LITERAL      : 64
LBRACE               : 16 17 18 31 32 32 33 33 34 34 35 35 36 37 38
LESS_THAN            : 56
LESS_THAN_EQUAL      : 59
LOGICAL_AND          : 51
LOGICAL_EQUAL        : 53
LOGICAL_NOT          : 54
LOGICAL_OR           : 52
LPAREN               : 16 17 18 19 20 21 22 23 24 31 32 33 34 35 36 37 38 60 61
MINUS                : 1 48
NEWLINE              : 13
NOT_EQUAL            : 57
PLUS                 : 47
PRINT                : 61
RBRACE               : 16 17 18 31 32 32 33 33 34 34 35 35 36 37 38
READLINE             : 
RETURN               : 14
RPAREN               : 16 17 18 19 20 21 22 23 24 31 32 33 34 35 36 37 38 60 61
STRING               : 44
STRING_LITERAL       : 67
TIMES                : 49
TRUE                 : 65
VAL                  : 20 22 39 41
VAR                  : 21 23 40 42
WHILE                : 37 38
error                : 

Nonterminals, with rules where they appear

Literal              : 62
assignment           : 10
expression           : 1 14 15 31 32 33 34 35 36 37 38 39 40 41 42 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 55 56 56 57 57 58 58 59 59 60 61
function_calling     : 7
function_declaration : 6
if_statement         : 8
parameter_calling    : 25 26
parameter_declaration : 27 28
parameter_list_calling : 19 20 21 22 23 24 26
parameter_list_declaration : 16 17 18 28
print_statement      : 12
program              : 0
return_statement     : 11
statement            : 3 4
statement_list       : 2 4 16 17 31 32 32 33 34 37
sync                 : 
term                 : 29 46
type                 : 16 20 21 30 39 40
variable_declaration : 5
while_statement      : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . statement_list
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 1

    (0) S' -> program .



state 2

    (2) program -> statement_list .
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    $end            reduce using rule 2 (program -> statement_list .)
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 3

    (3) statement_list -> statement .

    VAL             reduce using rule 3 (statement_list -> statement .)
    VAR             reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> variable_declaration .

    VAL             reduce using rule 5 (statement -> variable_declaration .)
    VAR             reduce using rule 5 (statement -> variable_declaration .)
    FUN             reduce using rule 5 (statement -> variable_declaration .)
    ID              reduce using rule 5 (statement -> variable_declaration .)
    IF              reduce using rule 5 (statement -> variable_declaration .)
    WHILE           reduce using rule 5 (statement -> variable_declaration .)
    RETURN          reduce using rule 5 (statement -> variable_declaration .)
    PRINT           reduce using rule 5 (statement -> variable_declaration .)
    $end            reduce using rule 5 (statement -> variable_declaration .)
    RBRACE          reduce using rule 5 (statement -> variable_declaration .)


state 5

    (6) statement -> function_declaration .

    VAL             reduce using rule 6 (statement -> function_declaration .)
    VAR             reduce using rule 6 (statement -> function_declaration .)
    FUN             reduce using rule 6 (statement -> function_declaration .)
    ID              reduce using rule 6 (statement -> function_declaration .)
    IF              reduce using rule 6 (statement -> function_declaration .)
    WHILE           reduce using rule 6 (statement -> function_declaration .)
    RETURN          reduce using rule 6 (statement -> function_declaration .)
    PRINT           reduce using rule 6 (statement -> function_declaration .)
    $end            reduce using rule 6 (statement -> function_declaration .)
    RBRACE          reduce using rule 6 (statement -> function_declaration .)


state 6

    (7) statement -> function_calling .

    VAL             reduce using rule 7 (statement -> function_calling .)
    VAR             reduce using rule 7 (statement -> function_calling .)
    FUN             reduce using rule 7 (statement -> function_calling .)
    ID              reduce using rule 7 (statement -> function_calling .)
    IF              reduce using rule 7 (statement -> function_calling .)
    WHILE           reduce using rule 7 (statement -> function_calling .)
    RETURN          reduce using rule 7 (statement -> function_calling .)
    PRINT           reduce using rule 7 (statement -> function_calling .)
    $end            reduce using rule 7 (statement -> function_calling .)
    RBRACE          reduce using rule 7 (statement -> function_calling .)


state 7

    (8) statement -> if_statement .

    VAL             reduce using rule 8 (statement -> if_statement .)
    VAR             reduce using rule 8 (statement -> if_statement .)
    FUN             reduce using rule 8 (statement -> if_statement .)
    ID              reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)
    PRINT           reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 8

    (9) statement -> while_statement .

    VAL             reduce using rule 9 (statement -> while_statement .)
    VAR             reduce using rule 9 (statement -> while_statement .)
    FUN             reduce using rule 9 (statement -> while_statement .)
    ID              reduce using rule 9 (statement -> while_statement .)
    IF              reduce using rule 9 (statement -> while_statement .)
    WHILE           reduce using rule 9 (statement -> while_statement .)
    RETURN          reduce using rule 9 (statement -> while_statement .)
    PRINT           reduce using rule 9 (statement -> while_statement .)
    $end            reduce using rule 9 (statement -> while_statement .)
    RBRACE          reduce using rule 9 (statement -> while_statement .)


state 9

    (10) statement -> assignment .

    VAL             reduce using rule 10 (statement -> assignment .)
    VAR             reduce using rule 10 (statement -> assignment .)
    FUN             reduce using rule 10 (statement -> assignment .)
    ID              reduce using rule 10 (statement -> assignment .)
    IF              reduce using rule 10 (statement -> assignment .)
    WHILE           reduce using rule 10 (statement -> assignment .)
    RETURN          reduce using rule 10 (statement -> assignment .)
    PRINT           reduce using rule 10 (statement -> assignment .)
    $end            reduce using rule 10 (statement -> assignment .)
    RBRACE          reduce using rule 10 (statement -> assignment .)


state 10

    (11) statement -> return_statement .

    VAL             reduce using rule 11 (statement -> return_statement .)
    VAR             reduce using rule 11 (statement -> return_statement .)
    FUN             reduce using rule 11 (statement -> return_statement .)
    ID              reduce using rule 11 (statement -> return_statement .)
    IF              reduce using rule 11 (statement -> return_statement .)
    WHILE           reduce using rule 11 (statement -> return_statement .)
    RETURN          reduce using rule 11 (statement -> return_statement .)
    PRINT           reduce using rule 11 (statement -> return_statement .)
    $end            reduce using rule 11 (statement -> return_statement .)
    RBRACE          reduce using rule 11 (statement -> return_statement .)


state 11

    (12) statement -> print_statement .

    VAL             reduce using rule 12 (statement -> print_statement .)
    VAR             reduce using rule 12 (statement -> print_statement .)
    FUN             reduce using rule 12 (statement -> print_statement .)
    ID              reduce using rule 12 (statement -> print_statement .)
    IF              reduce using rule 12 (statement -> print_statement .)
    WHILE           reduce using rule 12 (statement -> print_statement .)
    RETURN          reduce using rule 12 (statement -> print_statement .)
    PRINT           reduce using rule 12 (statement -> print_statement .)
    $end            reduce using rule 12 (statement -> print_statement .)
    RBRACE          reduce using rule 12 (statement -> print_statement .)


state 12

    (39) variable_declaration -> VAL . ID COLONS type EQUAL expression
    (41) variable_declaration -> VAL . ID EQUAL expression
    (20) function_calling -> VAL . ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> VAL . ID EQUAL ID LPAREN parameter_list_calling RPAREN

    ID              shift and go to state 21


state 13

    (19) function_calling -> ID . LPAREN parameter_list_calling RPAREN
    (24) function_calling -> ID . EQUAL ID LPAREN parameter_list_calling RPAREN
    (15) assignment -> ID . EQUAL expression

    LPAREN          shift and go to state 22
    EQUAL           shift and go to state 23


state 14

    (40) variable_declaration -> VAR . ID COLONS type EQUAL expression
    (42) variable_declaration -> VAR . ID EQUAL expression
    (21) function_calling -> VAR . ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> VAR . ID EQUAL ID LPAREN parameter_list_calling RPAREN

    ID              shift and go to state 24


state 15

    (16) function_declaration -> FUN . ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> FUN . ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> FUN . ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE

    ID              shift and go to state 25


state 16

    (31) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> IF . LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> IF . LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> IF . LPAREN expression RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 26


state 17

    (37) while_statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> WHILE . LPAREN expression RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 27


state 18

    (14) return_statement -> RETURN . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 28
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 19

    (61) print_statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 39


state 20

    (4) statement_list -> statement_list statement .

    VAL             reduce using rule 4 (statement_list -> statement_list statement .)
    VAR             reduce using rule 4 (statement_list -> statement_list statement .)
    FUN             reduce using rule 4 (statement_list -> statement_list statement .)
    ID              reduce using rule 4 (statement_list -> statement_list statement .)
    IF              reduce using rule 4 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 4 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 4 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 4 (statement_list -> statement_list statement .)
    $end            reduce using rule 4 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 4 (statement_list -> statement_list statement .)


state 21

    (39) variable_declaration -> VAL ID . COLONS type EQUAL expression
    (41) variable_declaration -> VAL ID . EQUAL expression
    (20) function_calling -> VAL ID . COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> VAL ID . EQUAL ID LPAREN parameter_list_calling RPAREN

    COLONS          shift and go to state 40
    EQUAL           shift and go to state 41


state 22

    (19) function_calling -> ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 42
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 23

    (24) function_calling -> ID EQUAL . ID LPAREN parameter_list_calling RPAREN
    (15) assignment -> ID EQUAL . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 45
    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 46
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 24

    (40) variable_declaration -> VAR ID . COLONS type EQUAL expression
    (42) variable_declaration -> VAR ID . EQUAL expression
    (21) function_calling -> VAR ID . COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> VAR ID . EQUAL ID LPAREN parameter_list_calling RPAREN

    COLONS          shift and go to state 47
    EQUAL           shift and go to state 48


state 25

    (16) function_declaration -> FUN ID . LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> FUN ID . LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> FUN ID . LPAREN parameter_list_declaration RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 49


state 26

    (31) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> IF LPAREN . expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> IF LPAREN . expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> IF LPAREN . expression RPAREN LBRACE RBRACE
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 50
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 27

    (37) while_statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> WHILE LPAREN . expression RPAREN LBRACE RBRACE
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 51
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 28

    (14) return_statement -> RETURN expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 14 (return_statement -> RETURN expression .)
    VAR             reduce using rule 14 (return_statement -> RETURN expression .)
    FUN             reduce using rule 14 (return_statement -> RETURN expression .)
    ID              reduce using rule 14 (return_statement -> RETURN expression .)
    IF              reduce using rule 14 (return_statement -> RETURN expression .)
    WHILE           reduce using rule 14 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 14 (return_statement -> RETURN expression .)
    PRINT           reduce using rule 14 (return_statement -> RETURN expression .)
    $end            reduce using rule 14 (return_statement -> RETURN expression .)
    RBRACE          reduce using rule 14 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 29

    (1) expression -> MINUS . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 64
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 30

    (46) expression -> term .

    PLUS            reduce using rule 46 (expression -> term .)
    MINUS           reduce using rule 46 (expression -> term .)
    TIMES           reduce using rule 46 (expression -> term .)
    DIVIDE          reduce using rule 46 (expression -> term .)
    LOGICAL_AND     reduce using rule 46 (expression -> term .)
    LOGICAL_OR      reduce using rule 46 (expression -> term .)
    LOGICAL_EQUAL   reduce using rule 46 (expression -> term .)
    GREATER_THAN    reduce using rule 46 (expression -> term .)
    LESS_THAN       reduce using rule 46 (expression -> term .)
    NOT_EQUAL       reduce using rule 46 (expression -> term .)
    GREATER_THAN_EQUAL reduce using rule 46 (expression -> term .)
    LESS_THAN_EQUAL reduce using rule 46 (expression -> term .)
    VAL             reduce using rule 46 (expression -> term .)
    VAR             reduce using rule 46 (expression -> term .)
    FUN             reduce using rule 46 (expression -> term .)
    ID              reduce using rule 46 (expression -> term .)
    IF              reduce using rule 46 (expression -> term .)
    WHILE           reduce using rule 46 (expression -> term .)
    RETURN          reduce using rule 46 (expression -> term .)
    PRINT           reduce using rule 46 (expression -> term .)
    $end            reduce using rule 46 (expression -> term .)
    RBRACE          reduce using rule 46 (expression -> term .)
    RPAREN          reduce using rule 46 (expression -> term .)


state 31

    (54) expression -> LOGICAL_NOT . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 65
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 32

    (60) expression -> LPAREN . expression RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 66
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 33

    (62) term -> Literal .

    PLUS            reduce using rule 62 (term -> Literal .)
    MINUS           reduce using rule 62 (term -> Literal .)
    TIMES           reduce using rule 62 (term -> Literal .)
    DIVIDE          reduce using rule 62 (term -> Literal .)
    LOGICAL_AND     reduce using rule 62 (term -> Literal .)
    LOGICAL_OR      reduce using rule 62 (term -> Literal .)
    LOGICAL_EQUAL   reduce using rule 62 (term -> Literal .)
    GREATER_THAN    reduce using rule 62 (term -> Literal .)
    LESS_THAN       reduce using rule 62 (term -> Literal .)
    NOT_EQUAL       reduce using rule 62 (term -> Literal .)
    GREATER_THAN_EQUAL reduce using rule 62 (term -> Literal .)
    LESS_THAN_EQUAL reduce using rule 62 (term -> Literal .)
    VAL             reduce using rule 62 (term -> Literal .)
    VAR             reduce using rule 62 (term -> Literal .)
    FUN             reduce using rule 62 (term -> Literal .)
    ID              reduce using rule 62 (term -> Literal .)
    IF              reduce using rule 62 (term -> Literal .)
    WHILE           reduce using rule 62 (term -> Literal .)
    RETURN          reduce using rule 62 (term -> Literal .)
    PRINT           reduce using rule 62 (term -> Literal .)
    $end            reduce using rule 62 (term -> Literal .)
    RBRACE          reduce using rule 62 (term -> Literal .)
    RPAREN          reduce using rule 62 (term -> Literal .)
    COMMA           reduce using rule 62 (term -> Literal .)


state 34

    (63) term -> ID .

    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)
    RPAREN          reduce using rule 63 (term -> ID .)
    COMMA           reduce using rule 63 (term -> ID .)


state 35

    (64) Literal -> INTEGER_LITERAL .

    PLUS            reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    MINUS           reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    TIMES           reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    DIVIDE          reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    LOGICAL_AND     reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    LOGICAL_OR      reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    LOGICAL_EQUAL   reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    GREATER_THAN    reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    LESS_THAN       reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    NOT_EQUAL       reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    GREATER_THAN_EQUAL reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    LESS_THAN_EQUAL reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    VAL             reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    VAR             reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    FUN             reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    ID              reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    IF              reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    WHILE           reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    RETURN          reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    PRINT           reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    $end            reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    RBRACE          reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    RPAREN          reduce using rule 64 (Literal -> INTEGER_LITERAL .)
    COMMA           reduce using rule 64 (Literal -> INTEGER_LITERAL .)


state 36

    (65) Literal -> TRUE .

    PLUS            reduce using rule 65 (Literal -> TRUE .)
    MINUS           reduce using rule 65 (Literal -> TRUE .)
    TIMES           reduce using rule 65 (Literal -> TRUE .)
    DIVIDE          reduce using rule 65 (Literal -> TRUE .)
    LOGICAL_AND     reduce using rule 65 (Literal -> TRUE .)
    LOGICAL_OR      reduce using rule 65 (Literal -> TRUE .)
    LOGICAL_EQUAL   reduce using rule 65 (Literal -> TRUE .)
    GREATER_THAN    reduce using rule 65 (Literal -> TRUE .)
    LESS_THAN       reduce using rule 65 (Literal -> TRUE .)
    NOT_EQUAL       reduce using rule 65 (Literal -> TRUE .)
    GREATER_THAN_EQUAL reduce using rule 65 (Literal -> TRUE .)
    LESS_THAN_EQUAL reduce using rule 65 (Literal -> TRUE .)
    VAL             reduce using rule 65 (Literal -> TRUE .)
    VAR             reduce using rule 65 (Literal -> TRUE .)
    FUN             reduce using rule 65 (Literal -> TRUE .)
    ID              reduce using rule 65 (Literal -> TRUE .)
    IF              reduce using rule 65 (Literal -> TRUE .)
    WHILE           reduce using rule 65 (Literal -> TRUE .)
    RETURN          reduce using rule 65 (Literal -> TRUE .)
    PRINT           reduce using rule 65 (Literal -> TRUE .)
    $end            reduce using rule 65 (Literal -> TRUE .)
    RBRACE          reduce using rule 65 (Literal -> TRUE .)
    RPAREN          reduce using rule 65 (Literal -> TRUE .)
    COMMA           reduce using rule 65 (Literal -> TRUE .)


state 37

    (66) Literal -> FALSE .

    PLUS            reduce using rule 66 (Literal -> FALSE .)
    MINUS           reduce using rule 66 (Literal -> FALSE .)
    TIMES           reduce using rule 66 (Literal -> FALSE .)
    DIVIDE          reduce using rule 66 (Literal -> FALSE .)
    LOGICAL_AND     reduce using rule 66 (Literal -> FALSE .)
    LOGICAL_OR      reduce using rule 66 (Literal -> FALSE .)
    LOGICAL_EQUAL   reduce using rule 66 (Literal -> FALSE .)
    GREATER_THAN    reduce using rule 66 (Literal -> FALSE .)
    LESS_THAN       reduce using rule 66 (Literal -> FALSE .)
    NOT_EQUAL       reduce using rule 66 (Literal -> FALSE .)
    GREATER_THAN_EQUAL reduce using rule 66 (Literal -> FALSE .)
    LESS_THAN_EQUAL reduce using rule 66 (Literal -> FALSE .)
    VAL             reduce using rule 66 (Literal -> FALSE .)
    VAR             reduce using rule 66 (Literal -> FALSE .)
    FUN             reduce using rule 66 (Literal -> FALSE .)
    ID              reduce using rule 66 (Literal -> FALSE .)
    IF              reduce using rule 66 (Literal -> FALSE .)
    WHILE           reduce using rule 66 (Literal -> FALSE .)
    RETURN          reduce using rule 66 (Literal -> FALSE .)
    PRINT           reduce using rule 66 (Literal -> FALSE .)
    $end            reduce using rule 66 (Literal -> FALSE .)
    RBRACE          reduce using rule 66 (Literal -> FALSE .)
    RPAREN          reduce using rule 66 (Literal -> FALSE .)
    COMMA           reduce using rule 66 (Literal -> FALSE .)


state 38

    (67) Literal -> STRING_LITERAL .

    PLUS            reduce using rule 67 (Literal -> STRING_LITERAL .)
    MINUS           reduce using rule 67 (Literal -> STRING_LITERAL .)
    TIMES           reduce using rule 67 (Literal -> STRING_LITERAL .)
    DIVIDE          reduce using rule 67 (Literal -> STRING_LITERAL .)
    LOGICAL_AND     reduce using rule 67 (Literal -> STRING_LITERAL .)
    LOGICAL_OR      reduce using rule 67 (Literal -> STRING_LITERAL .)
    LOGICAL_EQUAL   reduce using rule 67 (Literal -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 67 (Literal -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 67 (Literal -> STRING_LITERAL .)
    NOT_EQUAL       reduce using rule 67 (Literal -> STRING_LITERAL .)
    GREATER_THAN_EQUAL reduce using rule 67 (Literal -> STRING_LITERAL .)
    LESS_THAN_EQUAL reduce using rule 67 (Literal -> STRING_LITERAL .)
    VAL             reduce using rule 67 (Literal -> STRING_LITERAL .)
    VAR             reduce using rule 67 (Literal -> STRING_LITERAL .)
    FUN             reduce using rule 67 (Literal -> STRING_LITERAL .)
    ID              reduce using rule 67 (Literal -> STRING_LITERAL .)
    IF              reduce using rule 67 (Literal -> STRING_LITERAL .)
    WHILE           reduce using rule 67 (Literal -> STRING_LITERAL .)
    RETURN          reduce using rule 67 (Literal -> STRING_LITERAL .)
    PRINT           reduce using rule 67 (Literal -> STRING_LITERAL .)
    $end            reduce using rule 67 (Literal -> STRING_LITERAL .)
    RBRACE          reduce using rule 67 (Literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 67 (Literal -> STRING_LITERAL .)
    COMMA           reduce using rule 67 (Literal -> STRING_LITERAL .)


state 39

    (61) print_statement -> PRINT LPAREN . expression RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 67
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 40

    (39) variable_declaration -> VAL ID COLONS . type EQUAL expression
    (20) function_calling -> VAL ID COLONS . type EQUAL ID LPAREN parameter_list_calling RPAREN
    (43) type -> . INT
    (44) type -> . STRING
    (45) type -> . BOOLEAN

    INT             shift and go to state 69
    STRING          shift and go to state 70
    BOOLEAN         shift and go to state 71

    type                           shift and go to state 68

state 41

    (41) variable_declaration -> VAL ID EQUAL . expression
    (22) function_calling -> VAL ID EQUAL . ID LPAREN parameter_list_calling RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 72
    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 73
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 42

    (19) function_calling -> ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 74
    COMMA           shift and go to state 75


state 43

    (25) parameter_list_calling -> parameter_calling .

    RPAREN          reduce using rule 25 (parameter_list_calling -> parameter_calling .)
    COMMA           reduce using rule 25 (parameter_list_calling -> parameter_calling .)


state 44

    (29) parameter_calling -> term .

    RPAREN          reduce using rule 29 (parameter_calling -> term .)
    COMMA           reduce using rule 29 (parameter_calling -> term .)


state 45

    (24) function_calling -> ID EQUAL ID . LPAREN parameter_list_calling RPAREN
    (63) term -> ID .

    LPAREN          shift and go to state 76
    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)


state 46

    (15) assignment -> ID EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 15 (assignment -> ID EQUAL expression .)
    VAR             reduce using rule 15 (assignment -> ID EQUAL expression .)
    FUN             reduce using rule 15 (assignment -> ID EQUAL expression .)
    ID              reduce using rule 15 (assignment -> ID EQUAL expression .)
    IF              reduce using rule 15 (assignment -> ID EQUAL expression .)
    WHILE           reduce using rule 15 (assignment -> ID EQUAL expression .)
    RETURN          reduce using rule 15 (assignment -> ID EQUAL expression .)
    PRINT           reduce using rule 15 (assignment -> ID EQUAL expression .)
    $end            reduce using rule 15 (assignment -> ID EQUAL expression .)
    RBRACE          reduce using rule 15 (assignment -> ID EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 47

    (40) variable_declaration -> VAR ID COLONS . type EQUAL expression
    (21) function_calling -> VAR ID COLONS . type EQUAL ID LPAREN parameter_list_calling RPAREN
    (43) type -> . INT
    (44) type -> . STRING
    (45) type -> . BOOLEAN

    INT             shift and go to state 69
    STRING          shift and go to state 70
    BOOLEAN         shift and go to state 71

    type                           shift and go to state 77

state 48

    (42) variable_declaration -> VAR ID EQUAL . expression
    (23) function_calling -> VAR ID EQUAL . ID LPAREN parameter_list_calling RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 78
    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 79
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 49

    (16) function_declaration -> FUN ID LPAREN . parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> FUN ID LPAREN . parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> FUN ID LPAREN . parameter_list_declaration RPAREN LBRACE RBRACE
    (27) parameter_list_declaration -> . parameter_declaration
    (28) parameter_list_declaration -> . parameter_list_declaration COMMA parameter_declaration
    (30) parameter_declaration -> . ID COLONS type

    ID              shift and go to state 80

    parameter_list_declaration     shift and go to state 81
    parameter_declaration          shift and go to state 82

state 50

    (31) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> IF LPAREN expression . RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> IF LPAREN expression . RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> IF LPAREN expression . RPAREN LBRACE RBRACE
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    RPAREN          shift and go to state 83
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 51

    (37) while_statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> WHILE LPAREN expression . RPAREN LBRACE RBRACE
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    RPAREN          shift and go to state 84
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 52

    (47) expression -> expression PLUS . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 85
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 53

    (48) expression -> expression MINUS . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 86
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 54

    (49) expression -> expression TIMES . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 87
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 55

    (50) expression -> expression DIVIDE . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 88
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 56

    (51) expression -> expression LOGICAL_AND . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 89
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 57

    (52) expression -> expression LOGICAL_OR . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 90
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 58

    (53) expression -> expression LOGICAL_EQUAL . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 91
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 59

    (55) expression -> expression GREATER_THAN . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 92
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 60

    (56) expression -> expression LESS_THAN . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 93
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 61

    (57) expression -> expression NOT_EQUAL . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 94
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 62

    (58) expression -> expression GREATER_THAN_EQUAL . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 95
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 63

    (59) expression -> expression LESS_THAN_EQUAL . expression
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 96
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 64

    (1) expression -> MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 1 (expression -> MINUS expression .)
    MINUS           reduce using rule 1 (expression -> MINUS expression .)
    TIMES           reduce using rule 1 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 1 (expression -> MINUS expression .)
    LOGICAL_AND     reduce using rule 1 (expression -> MINUS expression .)
    LOGICAL_OR      reduce using rule 1 (expression -> MINUS expression .)
    LOGICAL_EQUAL   reduce using rule 1 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 1 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 1 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 1 (expression -> MINUS expression .)
    GREATER_THAN_EQUAL reduce using rule 1 (expression -> MINUS expression .)
    LESS_THAN_EQUAL reduce using rule 1 (expression -> MINUS expression .)
    VAL             reduce using rule 1 (expression -> MINUS expression .)
    VAR             reduce using rule 1 (expression -> MINUS expression .)
    FUN             reduce using rule 1 (expression -> MINUS expression .)
    ID              reduce using rule 1 (expression -> MINUS expression .)
    IF              reduce using rule 1 (expression -> MINUS expression .)
    WHILE           reduce using rule 1 (expression -> MINUS expression .)
    RETURN          reduce using rule 1 (expression -> MINUS expression .)
    PRINT           reduce using rule 1 (expression -> MINUS expression .)
    $end            reduce using rule 1 (expression -> MINUS expression .)
    RBRACE          reduce using rule 1 (expression -> MINUS expression .)
    RPAREN          reduce using rule 1 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 65

    (54) expression -> LOGICAL_NOT expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    MINUS           reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    TIMES           reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    DIVIDE          reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    LOGICAL_AND     reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    LOGICAL_OR      reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    LOGICAL_EQUAL   reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    GREATER_THAN    reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    LESS_THAN       reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    GREATER_THAN_EQUAL reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    LESS_THAN_EQUAL reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    VAL             reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    VAR             reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    FUN             reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    ID              reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    IF              reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    WHILE           reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    RETURN          reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    PRINT           reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    $end            reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    RBRACE          reduce using rule 54 (expression -> LOGICAL_NOT expression .)
    RPAREN          reduce using rule 54 (expression -> LOGICAL_NOT expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 66

    (60) expression -> LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    RPAREN          shift and go to state 97
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 67

    (61) print_statement -> PRINT LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 68

    (39) variable_declaration -> VAL ID COLONS type . EQUAL expression
    (20) function_calling -> VAL ID COLONS type . EQUAL ID LPAREN parameter_list_calling RPAREN

    EQUAL           shift and go to state 99


state 69

    (43) type -> INT .

    EQUAL           reduce using rule 43 (type -> INT .)
    RPAREN          reduce using rule 43 (type -> INT .)
    COMMA           reduce using rule 43 (type -> INT .)
    LBRACE          reduce using rule 43 (type -> INT .)


state 70

    (44) type -> STRING .

    EQUAL           reduce using rule 44 (type -> STRING .)
    RPAREN          reduce using rule 44 (type -> STRING .)
    COMMA           reduce using rule 44 (type -> STRING .)
    LBRACE          reduce using rule 44 (type -> STRING .)


state 71

    (45) type -> BOOLEAN .

    EQUAL           reduce using rule 45 (type -> BOOLEAN .)
    RPAREN          reduce using rule 45 (type -> BOOLEAN .)
    COMMA           reduce using rule 45 (type -> BOOLEAN .)
    LBRACE          reduce using rule 45 (type -> BOOLEAN .)


state 72

    (22) function_calling -> VAL ID EQUAL ID . LPAREN parameter_list_calling RPAREN
    (63) term -> ID .

    LPAREN          shift and go to state 100
    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)


state 73

    (41) variable_declaration -> VAL ID EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    VAR             reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    FUN             reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    ID              reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    IF              reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    WHILE           reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    RETURN          reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    PRINT           reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    $end            reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 41 (variable_declaration -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 74

    (19) function_calling -> ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 19 (function_calling -> ID LPAREN parameter_list_calling RPAREN .)


state 75

    (26) parameter_list_calling -> parameter_list_calling COMMA . parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_calling              shift and go to state 101
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 76

    (24) function_calling -> ID EQUAL ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 102
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 77

    (40) variable_declaration -> VAR ID COLONS type . EQUAL expression
    (21) function_calling -> VAR ID COLONS type . EQUAL ID LPAREN parameter_list_calling RPAREN

    EQUAL           shift and go to state 103


state 78

    (23) function_calling -> VAR ID EQUAL ID . LPAREN parameter_list_calling RPAREN
    (63) term -> ID .

    LPAREN          shift and go to state 104
    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)


state 79

    (42) variable_declaration -> VAR ID EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    VAR             reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    FUN             reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    ID              reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    IF              reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    WHILE           reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    RETURN          reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    PRINT           reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    $end            reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 42 (variable_declaration -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 80

    (30) parameter_declaration -> ID . COLONS type

    COLONS          shift and go to state 105


state 81

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration . RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> FUN ID LPAREN parameter_list_declaration . RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> FUN ID LPAREN parameter_list_declaration . RPAREN LBRACE RBRACE
    (28) parameter_list_declaration -> parameter_list_declaration . COMMA parameter_declaration

    RPAREN          shift and go to state 106
    COMMA           shift and go to state 107


state 82

    (27) parameter_list_declaration -> parameter_declaration .

    RPAREN          reduce using rule 27 (parameter_list_declaration -> parameter_declaration .)
    COMMA           reduce using rule 27 (parameter_list_declaration -> parameter_declaration .)


state 83

    (31) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (32) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> IF LPAREN expression RPAREN . LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> IF LPAREN expression RPAREN . LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> IF LPAREN expression RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 108


state 84

    (37) while_statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (38) while_statement -> WHILE LPAREN expression RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 109


state 85

    (47) expression -> expression PLUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 47 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 47 (expression -> expression PLUS expression .)
    LOGICAL_AND     reduce using rule 47 (expression -> expression PLUS expression .)
    LOGICAL_OR      reduce using rule 47 (expression -> expression PLUS expression .)
    LOGICAL_EQUAL   reduce using rule 47 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 47 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 47 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression PLUS expression .)
    GREATER_THAN_EQUAL reduce using rule 47 (expression -> expression PLUS expression .)
    LESS_THAN_EQUAL reduce using rule 47 (expression -> expression PLUS expression .)
    VAL             reduce using rule 47 (expression -> expression PLUS expression .)
    VAR             reduce using rule 47 (expression -> expression PLUS expression .)
    FUN             reduce using rule 47 (expression -> expression PLUS expression .)
    ID              reduce using rule 47 (expression -> expression PLUS expression .)
    IF              reduce using rule 47 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 47 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 47 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 47 (expression -> expression PLUS expression .)
    $end            reduce using rule 47 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 47 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 86

    (48) expression -> expression MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 48 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 48 (expression -> expression MINUS expression .)
    LOGICAL_AND     reduce using rule 48 (expression -> expression MINUS expression .)
    LOGICAL_OR      reduce using rule 48 (expression -> expression MINUS expression .)
    LOGICAL_EQUAL   reduce using rule 48 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 48 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 48 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression MINUS expression .)
    GREATER_THAN_EQUAL reduce using rule 48 (expression -> expression MINUS expression .)
    LESS_THAN_EQUAL reduce using rule 48 (expression -> expression MINUS expression .)
    VAL             reduce using rule 48 (expression -> expression MINUS expression .)
    VAR             reduce using rule 48 (expression -> expression MINUS expression .)
    FUN             reduce using rule 48 (expression -> expression MINUS expression .)
    ID              reduce using rule 48 (expression -> expression MINUS expression .)
    IF              reduce using rule 48 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 48 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 48 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 48 (expression -> expression MINUS expression .)
    $end            reduce using rule 48 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 48 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 87

    (49) expression -> expression TIMES expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 49 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 49 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 49 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 49 (expression -> expression TIMES expression .)
    LOGICAL_AND     reduce using rule 49 (expression -> expression TIMES expression .)
    LOGICAL_OR      reduce using rule 49 (expression -> expression TIMES expression .)
    LOGICAL_EQUAL   reduce using rule 49 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 49 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 49 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> expression TIMES expression .)
    GREATER_THAN_EQUAL reduce using rule 49 (expression -> expression TIMES expression .)
    LESS_THAN_EQUAL reduce using rule 49 (expression -> expression TIMES expression .)
    VAL             reduce using rule 49 (expression -> expression TIMES expression .)
    VAR             reduce using rule 49 (expression -> expression TIMES expression .)
    FUN             reduce using rule 49 (expression -> expression TIMES expression .)
    ID              reduce using rule 49 (expression -> expression TIMES expression .)
    IF              reduce using rule 49 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 49 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 49 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 49 (expression -> expression TIMES expression .)
    $end            reduce using rule 49 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 49 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 49 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 88

    (50) expression -> expression DIVIDE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    PLUS            reduce using rule 50 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 50 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 50 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 50 (expression -> expression DIVIDE expression .)
    LOGICAL_AND     reduce using rule 50 (expression -> expression DIVIDE expression .)
    LOGICAL_OR      reduce using rule 50 (expression -> expression DIVIDE expression .)
    LOGICAL_EQUAL   reduce using rule 50 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 50 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 50 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 50 (expression -> expression DIVIDE expression .)
    GREATER_THAN_EQUAL reduce using rule 50 (expression -> expression DIVIDE expression .)
    LESS_THAN_EQUAL reduce using rule 50 (expression -> expression DIVIDE expression .)
    VAL             reduce using rule 50 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 50 (expression -> expression DIVIDE expression .)
    FUN             reduce using rule 50 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 50 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 50 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 50 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 50 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 50 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 50 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 50 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 50 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 89

    (51) expression -> expression LOGICAL_AND expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    LOGICAL_OR      reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    VAL             reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    VAR             reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    FUN             reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    ID              reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    IF              reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    WHILE           reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    RETURN          reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    PRINT           reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    $end            reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    RBRACE          reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    RPAREN          reduce using rule 51 (expression -> expression LOGICAL_AND expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63

  ! PLUS            [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! LOGICAL_EQUAL   [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_THAN       [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 51 (expression -> expression LOGICAL_AND expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]


state 90

    (52) expression -> expression LOGICAL_OR expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_OR      reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    VAL             reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    VAR             reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    FUN             reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    ID              reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    IF              reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    WHILE           reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    RETURN          reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    PRINT           reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    $end            reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    RBRACE          reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    RPAREN          reduce using rule 52 (expression -> expression LOGICAL_OR expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63

  ! PLUS            [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_AND     [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_EQUAL   [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_THAN       [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 52 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_OR      [ shift and go to state 57 ]


state 91

    (53) expression -> expression LOGICAL_EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    LOGICAL_OR      reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    LOGICAL_EQUAL   reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    VAL             reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    VAR             reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    FUN             reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    ID              reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    IF              reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    WHILE           reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    RETURN          reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    PRINT           reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    $end            reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    RBRACE          reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    RPAREN          reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63

  ! PLUS            [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 53 (expression -> expression LOGICAL_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]


state 92

    (55) expression -> expression GREATER_THAN expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    LOGICAL_OR      reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    LOGICAL_EQUAL   reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    VAL             reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    VAR             reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    FUN             reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    ID              reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    IF              reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    RETURN          reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    PRINT           reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    RBRACE          reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 55 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 55 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression GREATER_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 93

    (56) expression -> expression LESS_THAN expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 56 (expression -> expression LESS_THAN expression .)
    LOGICAL_OR      reduce using rule 56 (expression -> expression LESS_THAN expression .)
    LOGICAL_EQUAL   reduce using rule 56 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 56 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 56 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> expression LESS_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 56 (expression -> expression LESS_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 56 (expression -> expression LESS_THAN expression .)
    VAL             reduce using rule 56 (expression -> expression LESS_THAN expression .)
    VAR             reduce using rule 56 (expression -> expression LESS_THAN expression .)
    FUN             reduce using rule 56 (expression -> expression LESS_THAN expression .)
    ID              reduce using rule 56 (expression -> expression LESS_THAN expression .)
    IF              reduce using rule 56 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 56 (expression -> expression LESS_THAN expression .)
    RETURN          reduce using rule 56 (expression -> expression LESS_THAN expression .)
    PRINT           reduce using rule 56 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 56 (expression -> expression LESS_THAN expression .)
    RBRACE          reduce using rule 56 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 56 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 56 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression LESS_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 94

    (57) expression -> expression NOT_EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_OR      reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_EQUAL   reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    VAL             reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    VAR             reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    FUN             reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    PRINT           reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    RBRACE          reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 57 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63

  ! PLUS            [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 57 (expression -> expression NOT_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]


state 95

    (58) expression -> expression GREATER_THAN_EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    LOGICAL_OR      reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    LOGICAL_EQUAL   reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    VAL             reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    VAR             reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    FUN             reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    ID              reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    IF              reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    WHILE           reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    RETURN          reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    PRINT           reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    $end            reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    RBRACE          reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    RPAREN          reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 96

    (59) expression -> expression LESS_THAN_EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    LOGICAL_AND     reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    LOGICAL_OR      reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    LOGICAL_EQUAL   reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    VAL             reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    VAR             reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    FUN             reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    ID              reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    IF              reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    WHILE           reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    RETURN          reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    PRINT           reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    $end            reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    RBRACE          reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    RPAREN          reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! PLUS            [ reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 56 ]
  ! LOGICAL_OR      [ shift and go to state 57 ]
  ! LOGICAL_EQUAL   [ shift and go to state 58 ]
  ! GREATER_THAN    [ shift and go to state 59 ]
  ! LESS_THAN       [ shift and go to state 60 ]
  ! NOT_EQUAL       [ shift and go to state 61 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 62 ]
  ! LESS_THAN_EQUAL [ shift and go to state 63 ]


state 97

    (60) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    LOGICAL_AND     reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    LOGICAL_OR      reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    LOGICAL_EQUAL   reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    VAL             reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    FUN             reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 60 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 60 (expression -> LPAREN expression RPAREN .)


state 98

    (61) print_statement -> PRINT LPAREN expression RPAREN .

    VAL             reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    FUN             reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    RETURN          reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 61 (print_statement -> PRINT LPAREN expression RPAREN .)


state 99

    (39) variable_declaration -> VAL ID COLONS type EQUAL . expression
    (20) function_calling -> VAL ID COLONS type EQUAL . ID LPAREN parameter_list_calling RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 110
    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 111
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 100

    (22) function_calling -> VAL ID EQUAL ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 112
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 101

    (26) parameter_list_calling -> parameter_list_calling COMMA parameter_calling .

    RPAREN          reduce using rule 26 (parameter_list_calling -> parameter_list_calling COMMA parameter_calling .)
    COMMA           reduce using rule 26 (parameter_list_calling -> parameter_list_calling COMMA parameter_calling .)


state 102

    (24) function_calling -> ID EQUAL ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 113
    COMMA           shift and go to state 75


state 103

    (40) variable_declaration -> VAR ID COLONS type EQUAL . expression
    (21) function_calling -> VAR ID COLONS type EQUAL . ID LPAREN parameter_list_calling RPAREN
    (1) expression -> . MINUS expression
    (46) expression -> . term
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . expression LOGICAL_AND expression
    (52) expression -> . expression LOGICAL_OR expression
    (53) expression -> . expression LOGICAL_EQUAL expression
    (54) expression -> . LOGICAL_NOT expression
    (55) expression -> . expression GREATER_THAN expression
    (56) expression -> . expression LESS_THAN expression
    (57) expression -> . expression NOT_EQUAL expression
    (58) expression -> . expression GREATER_THAN_EQUAL expression
    (59) expression -> . expression LESS_THAN_EQUAL expression
    (60) expression -> . LPAREN expression RPAREN
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 114
    MINUS           shift and go to state 29
    LOGICAL_NOT     shift and go to state 31
    LPAREN          shift and go to state 32
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    expression                     shift and go to state 115
    term                           shift and go to state 30
    Literal                        shift and go to state 33

state 104

    (23) function_calling -> VAR ID EQUAL ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 116
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 105

    (30) parameter_declaration -> ID COLONS . type
    (43) type -> . INT
    (44) type -> . STRING
    (45) type -> . BOOLEAN

    INT             shift and go to state 69
    STRING          shift and go to state 70
    BOOLEAN         shift and go to state 71

    type                           shift and go to state 117

state 106

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN . COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN . LBRACE statement_list RBRACE
    (18) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN . LBRACE RBRACE

    COLONS          shift and go to state 118
    LBRACE          shift and go to state 119


state 107

    (28) parameter_list_declaration -> parameter_list_declaration COMMA . parameter_declaration
    (30) parameter_declaration -> . ID COLONS type

    ID              shift and go to state 80

    parameter_declaration          shift and go to state 120

state 108

    (31) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (32) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> IF LPAREN expression RPAREN LBRACE . RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> IF LPAREN expression RPAREN LBRACE . RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> IF LPAREN expression RPAREN LBRACE . RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 122
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 121
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 109

    (37) while_statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (38) while_statement -> WHILE LPAREN expression RPAREN LBRACE . RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 124
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 123
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 110

    (20) function_calling -> VAL ID COLONS type EQUAL ID . LPAREN parameter_list_calling RPAREN
    (63) term -> ID .

    LPAREN          shift and go to state 125
    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)


state 111

    (39) variable_declaration -> VAL ID COLONS type EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    VAR             reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    FUN             reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    ID              reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    IF              reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    WHILE           reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    RETURN          reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    PRINT           reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    $end            reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    RBRACE          reduce using rule 39 (variable_declaration -> VAL ID COLONS type EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 112

    (22) function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 126
    COMMA           shift and go to state 75


state 113

    (24) function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 24 (function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN .)


state 114

    (21) function_calling -> VAR ID COLONS type EQUAL ID . LPAREN parameter_list_calling RPAREN
    (63) term -> ID .

    LPAREN          shift and go to state 127
    PLUS            reduce using rule 63 (term -> ID .)
    MINUS           reduce using rule 63 (term -> ID .)
    TIMES           reduce using rule 63 (term -> ID .)
    DIVIDE          reduce using rule 63 (term -> ID .)
    LOGICAL_AND     reduce using rule 63 (term -> ID .)
    LOGICAL_OR      reduce using rule 63 (term -> ID .)
    LOGICAL_EQUAL   reduce using rule 63 (term -> ID .)
    GREATER_THAN    reduce using rule 63 (term -> ID .)
    LESS_THAN       reduce using rule 63 (term -> ID .)
    NOT_EQUAL       reduce using rule 63 (term -> ID .)
    GREATER_THAN_EQUAL reduce using rule 63 (term -> ID .)
    LESS_THAN_EQUAL reduce using rule 63 (term -> ID .)
    VAL             reduce using rule 63 (term -> ID .)
    VAR             reduce using rule 63 (term -> ID .)
    FUN             reduce using rule 63 (term -> ID .)
    ID              reduce using rule 63 (term -> ID .)
    IF              reduce using rule 63 (term -> ID .)
    WHILE           reduce using rule 63 (term -> ID .)
    RETURN          reduce using rule 63 (term -> ID .)
    PRINT           reduce using rule 63 (term -> ID .)
    $end            reduce using rule 63 (term -> ID .)
    RBRACE          reduce using rule 63 (term -> ID .)


state 115

    (40) variable_declaration -> VAR ID COLONS type EQUAL expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression
    (51) expression -> expression . LOGICAL_AND expression
    (52) expression -> expression . LOGICAL_OR expression
    (53) expression -> expression . LOGICAL_EQUAL expression
    (55) expression -> expression . GREATER_THAN expression
    (56) expression -> expression . LESS_THAN expression
    (57) expression -> expression . NOT_EQUAL expression
    (58) expression -> expression . GREATER_THAN_EQUAL expression
    (59) expression -> expression . LESS_THAN_EQUAL expression

    VAL             reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    VAR             reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    FUN             reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    ID              reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    IF              reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    WHILE           reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    RETURN          reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    PRINT           reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    $end            reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    RBRACE          reduce using rule 40 (variable_declaration -> VAR ID COLONS type EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOGICAL_AND     shift and go to state 56
    LOGICAL_OR      shift and go to state 57
    LOGICAL_EQUAL   shift and go to state 58
    GREATER_THAN    shift and go to state 59
    LESS_THAN       shift and go to state 60
    NOT_EQUAL       shift and go to state 61
    GREATER_THAN_EQUAL shift and go to state 62
    LESS_THAN_EQUAL shift and go to state 63


state 116

    (23) function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 128
    COMMA           shift and go to state 75


state 117

    (30) parameter_declaration -> ID COLONS type .

    RPAREN          reduce using rule 30 (parameter_declaration -> ID COLONS type .)
    COMMA           reduce using rule 30 (parameter_declaration -> ID COLONS type .)


state 118

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS . type LBRACE statement_list RBRACE
    (43) type -> . INT
    (44) type -> . STRING
    (45) type -> . BOOLEAN

    INT             shift and go to state 69
    STRING          shift and go to state 70
    BOOLEAN         shift and go to state 71

    type                           shift and go to state 129

state 119

    (17) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE . statement_list RBRACE
    (18) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE . RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 131
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 130
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 120

    (28) parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration .

    RPAREN          reduce using rule 28 (parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration .)
    COMMA           reduce using rule 28 (parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration .)


state 121

    (31) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 132
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 122

    (33) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE . ELSE LBRACE statement_list RBRACE
    (35) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE . ELSE LBRACE RBRACE
    (36) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .

    ELSE            shift and go to state 133
    VAL             reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    VAR             reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    FUN             reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    ID              reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    IF              reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    PRINT           reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    $end            reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 36 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE .)


state 123

    (37) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 134
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 124

    (38) while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .

    VAL             reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    VAR             reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    FUN             reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    ID              reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    IF              reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    PRINT           reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    $end            reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 38 (while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE .)


state 125

    (20) function_calling -> VAL ID COLONS type EQUAL ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 135
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 126

    (22) function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 22 (function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN .)


state 127

    (21) function_calling -> VAR ID COLONS type EQUAL ID LPAREN . parameter_list_calling RPAREN
    (25) parameter_list_calling -> . parameter_calling
    (26) parameter_list_calling -> . parameter_list_calling COMMA parameter_calling
    (29) parameter_calling -> . term
    (62) term -> . Literal
    (63) term -> . ID
    (64) Literal -> . INTEGER_LITERAL
    (65) Literal -> . TRUE
    (66) Literal -> . FALSE
    (67) Literal -> . STRING_LITERAL

    ID              shift and go to state 34
    INTEGER_LITERAL shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STRING_LITERAL  shift and go to state 38

    parameter_list_calling         shift and go to state 136
    parameter_calling              shift and go to state 43
    term                           shift and go to state 44
    Literal                        shift and go to state 33

state 128

    (23) function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 23 (function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN .)


state 129

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 137


state 130

    (17) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list . RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 138
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 131

    (18) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .

    VAL             reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    VAR             reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    FUN             reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    ID              reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    IF              reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    PRINT           reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    $end            reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 18 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE .)


state 132

    (31) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .
    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE RBRACE

    VAL             reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 31 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 139


state 133

    (33) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE . LBRACE statement_list RBRACE
    (35) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE . LBRACE RBRACE

    LBRACE          shift and go to state 140


state 134

    (37) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    VAL             reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 37 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 135

    (20) function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 141
    COMMA           shift and go to state 75


state 136

    (21) function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling . RPAREN
    (26) parameter_list_calling -> parameter_list_calling . COMMA parameter_calling

    RPAREN          shift and go to state 142
    COMMA           shift and go to state 75


state 137

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE . statement_list RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 143
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 138

    (17) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .

    VAL             reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 17 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE .)


state 139

    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE RBRACE

    LBRACE          shift and go to state 144


state 140

    (33) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE . statement_list RBRACE
    (35) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE . RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 145
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 146
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 141

    (20) function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 20 (function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)


state 142

    (21) function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .

    VAL             reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    VAR             reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    FUN             reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    ID              reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    IF              reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    WHILE           reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RETURN          reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    PRINT           reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    $end            reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)
    RBRACE          reduce using rule 21 (function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN .)


state 143

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list . RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 147
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 144

    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (34) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . RBRACE
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 149
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement_list                 shift and go to state 148
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 145

    (35) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .

    VAL             reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    VAR             reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    FUN             reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    ID              reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    IF              reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    WHILE           reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    RETURN          reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    PRINT           reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    $end            reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)
    RBRACE          reduce using rule 35 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE .)


state 146

    (33) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list . RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 150
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 147

    (16) function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .

    VAL             reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    VAR             reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    FUN             reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    ID              reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    IF              reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    $end            reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 16 (function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE .)


state 148

    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (4) statement_list -> statement_list . statement
    (5) statement -> . variable_declaration
    (6) statement -> . function_declaration
    (7) statement -> . function_calling
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . assignment
    (11) statement -> . return_statement
    (12) statement -> . print_statement
    (39) variable_declaration -> . VAL ID COLONS type EQUAL expression
    (40) variable_declaration -> . VAR ID COLONS type EQUAL expression
    (41) variable_declaration -> . VAL ID EQUAL expression
    (42) variable_declaration -> . VAR ID EQUAL expression
    (16) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE
    (17) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE
    (18) function_declaration -> . FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE
    (19) function_calling -> . ID LPAREN parameter_list_calling RPAREN
    (20) function_calling -> . VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (21) function_calling -> . VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN
    (22) function_calling -> . VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (23) function_calling -> . VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (24) function_calling -> . ID EQUAL ID LPAREN parameter_list_calling RPAREN
    (31) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (32) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (33) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE
    (34) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE
    (35) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE
    (36) if_statement -> . IF LPAREN expression RPAREN LBRACE RBRACE
    (37) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (38) while_statement -> . WHILE LPAREN expression RPAREN LBRACE RBRACE
    (15) assignment -> . ID EQUAL expression
    (14) return_statement -> . RETURN expression
    (61) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 151
    VAL             shift and go to state 12
    VAR             shift and go to state 14
    FUN             shift and go to state 15
    ID              shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    RETURN          shift and go to state 18
    PRINT           shift and go to state 19

    statement                      shift and go to state 20
    variable_declaration           shift and go to state 4
    function_declaration           shift and go to state 5
    function_calling               shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    assignment                     shift and go to state 9
    return_statement               shift and go to state 10
    print_statement                shift and go to state 11

state 149

    (34) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .

    VAL             reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    VAR             reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    FUN             reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    ID              reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    IF              reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    WHILE           reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    RETURN          reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    PRINT           reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    $end            reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)
    RBRACE          reduce using rule 34 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE .)


state 150

    (33) if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .

    VAL             reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    VAR             reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    FUN             reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 33 (if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE .)


state 151

    (32) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    VAL             reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    VAR             reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FUN             reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 32 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

