
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALleftLOGICAL_ORleftLOGICAL_ANDnonassocLOGICAL_EQUALNOT_EQUALnonassocLESS_THANGREATER_THANLESS_THAN_EQUALGREATER_THAN_EQUALleftPLUSMINUSleftTIMESDIVIDErightLOGICAL_NOTUMINUSBOOLEAN COLONS COMMA DIVIDE ELSE EQUAL FALSE FOR FUN GREATER_THAN GREATER_THAN_EQUAL ID IF IN INT INTEGER_LITERAL LBRACE LESS_THAN LESS_THAN_EQUAL LOGICAL_AND LOGICAL_EQUAL LOGICAL_NOT LOGICAL_OR LPAREN MINUS NOT_EQUAL PLUS PRINT RANGE RBRACE READLINE RETURN RPAREN SEMICOLON STEP STRING STRING_LITERAL TIMES TRUE VAL VAR WHILEempty :expression : MINUS expression %prec UMINUSprogram : declarationsstatement_list : statement\n                     | statement_list statement declarations : declaration\n                    | declarations declaration declaration : variable_declaration semis\n                   | function_declaration semis statement : declaration\n                 | function_calling semis\n                 | if_statement semis\n                 | while_statement semis\n                 | for_statement semis\n                 | assignment semis\n                 | return_statement semis\n                 | print_statement semisblock : LBRACE RBRACE\n             | LBRACE statement_list RBRACEreturn_statement : RETURN expressionassignment : ID EQUAL expressionfunction_declaration : FUN ID LPAREN parameter_list_declaration RPAREN COLONS type block\n                            | FUN ID LPAREN parameter_list_declaration RPAREN block\n                            | FUN ID LPAREN RPAREN COLONS type block\n                            | FUN ID LPAREN RPAREN blockfunction_calling : ID LPAREN parameter_list_calling RPAREN\n                        | ID LPAREN RPARENparameter_list_calling : parameter_calling\n                              | parameter_list_calling COMMA parameter_callingparameter_list_declaration : parameter_declaration\n                                  | parameter_list_declaration COMMA parameter_declarationexpression : term\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression LOGICAL_AND expression\n                  | expression LOGICAL_OR expression\n                  | expression LOGICAL_EQUAL expression\n                  | LOGICAL_NOT expression\n                  | expression GREATER_THAN expression\n                  | expression LESS_THAN expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN_EQUAL expression\n                  | expression LESS_THAN_EQUAL expression\n                  | LPAREN expression RPAREN parameter_calling : termparameter_declaration : ID COLONS typeif_statement : IF LPAREN expression RPAREN block\n                    | IF LPAREN expression RPAREN block ELSE blockwhile_statement : WHILE LPAREN expression RPAREN blockfor_statement : FOR LPAREN range_operator RPAREN block range_operator : ID IN term RANGE term\n                      | ID IN term RANGE term STEP termvariable_declaration : VAL ID COLONS type EQUAL expression\n                            | VAR ID COLONS type EQUAL expression\n                            | VAL ID EQUAL expression\n                            | VAR ID EQUAL expression   type : INT\n             | STRING\n             | BOOLEANprint_statement : PRINT LPAREN expression RPARENterm : Literal\n            | ID\n            | function_calling\n            | readlineLiteral : INTEGER_LITERAL\n                | TRUE\n                | FALSE\n                | STRING_LITERALsemis : SEMICOLON\n             | emptyreadline : READLINE LPAREN RPAREN'
    
_lr_action_items = {'VAL':([0,2,3,4,5,9,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[6,6,-6,-1,-1,-7,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,6,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,6,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'VAR':([0,2,3,4,5,9,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[7,7,-6,-1,-1,-7,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,7,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,7,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'FUN':([0,2,3,4,5,9,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[8,8,-6,-1,-1,-7,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,8,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,8,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'$end':([1,2,3,4,5,9,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,113,116,117,133,],[0,-3,-6,-1,-1,-7,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,-26,-24,-19,-22,]),'SEMICOLON':([4,5,26,27,29,32,33,34,35,36,37,38,41,60,61,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,100,101,102,103,104,105,106,113,116,117,130,133,134,144,145,146,147,151,],[11,11,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,11,11,11,11,11,11,11,-26,-24,-19,-20,-22,-21,-62,-49,-51,-52,-50,]),'RBRACE':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,96,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,117,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'ID':([4,5,6,7,8,10,11,12,13,18,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,111,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,143,144,145,146,147,150,151,153,],[-1,-1,14,15,16,-8,-71,-72,-9,26,26,42,-64,-57,26,-32,26,26,-63,-65,-66,-67,-68,-69,-70,-58,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-2,-40,26,42,-25,107,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,107,-4,-10,-1,-1,-1,-1,-1,-1,-1,26,-26,26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,26,26,26,138,-20,26,-22,-21,26,-62,-49,-51,-52,26,-50,26,]),'IF':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,108,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,108,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'WHILE':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,109,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,109,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'FOR':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,110,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,110,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'RETURN':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,111,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,111,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'PRINT':([4,5,10,11,12,13,26,27,29,32,33,34,35,36,37,38,41,60,61,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,121,122,123,124,125,130,133,134,144,145,146,147,151,],[-1,-1,-8,-71,-72,-9,-64,-57,-32,-63,-65,-66,-67,-68,-69,-70,-58,-2,-40,-25,112,-55,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-56,-23,-18,112,-4,-10,-1,-1,-1,-1,-1,-1,-1,-26,-24,-19,-5,-11,-12,-13,-14,-15,-16,-17,-20,-22,-21,-62,-49,-51,-52,-50,]),'COLONS':([14,15,42,44,66,],[17,19,65,68,92,]),'EQUAL':([14,15,22,23,24,25,40,107,],[18,20,46,-59,-60,-61,64,126,]),'LPAREN':([16,18,20,26,28,30,31,39,46,48,49,50,51,52,53,54,55,56,57,58,59,64,107,108,109,110,111,112,126,127,128,131,],[21,31,31,47,31,31,31,63,31,31,31,31,31,31,31,31,31,31,31,31,31,31,47,127,128,129,31,131,31,31,31,31,]),'INT':([17,19,65,68,92,],[23,23,23,23,23,]),'STRING':([17,19,65,68,92,],[24,24,24,24,24,]),'BOOLEAN':([17,19,65,68,92,],[25,25,25,25,25,]),'MINUS':([18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,41,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,111,113,126,127,128,130,131,134,135,136,139,],[28,28,-64,49,28,-32,28,28,-63,-65,-66,-67,-68,-69,-70,49,28,28,28,28,28,28,28,28,28,28,28,28,28,-2,-40,49,28,49,-27,-33,-34,-35,-36,49,49,49,49,49,49,49,49,-46,-73,49,28,-26,28,28,28,49,28,49,49,49,49,]),'LOGICAL_NOT':([18,20,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,64,111,126,127,128,131,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'INTEGER_LITERAL':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TRUE':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FALSE':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'STRING_LITERAL':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'READLINE':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'RPAREN':([21,23,24,25,26,29,32,33,34,35,36,37,38,43,45,47,60,61,62,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,113,132,135,136,137,139,152,154,],[44,-59,-60,-61,-64,-32,-63,-65,-66,-67,-68,-69,-70,66,-30,73,-2,-40,88,89,113,-27,-28,-47,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,-48,-31,-26,-29,140,141,142,144,-53,-54,]),'COMMA':([23,24,25,26,32,33,34,35,36,37,38,43,45,72,73,74,75,89,91,94,113,132,],[-59,-60,-61,-64,-63,-65,-66,-67,-68,-69,-70,67,-30,114,-27,-28,-47,-73,-48,-31,-26,-29,]),'LBRACE':([23,24,25,44,66,95,115,140,141,142,149,],[-59,-60,-61,70,70,70,70,70,70,70,70,]),'PLUS':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,48,-32,-63,-65,-66,-67,-68,-69,-70,48,-2,-40,48,48,-27,-33,-34,-35,-36,48,48,48,48,48,48,48,48,-46,-73,48,-26,48,48,48,48,48,]),'TIMES':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,50,-32,-63,-65,-66,-67,-68,-69,-70,50,-2,-40,50,50,-27,50,50,-35,-36,50,50,50,50,50,50,50,50,-46,-73,50,-26,50,50,50,50,50,]),'DIVIDE':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,51,-32,-63,-65,-66,-67,-68,-69,-70,51,-2,-40,51,51,-27,51,51,-35,-36,51,51,51,51,51,51,51,51,-46,-73,51,-26,51,51,51,51,51,]),'LOGICAL_AND':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,52,-32,-63,-65,-66,-67,-68,-69,-70,52,-2,-40,52,52,-27,-33,-34,-35,-36,-37,52,-39,-41,-42,-43,-44,-45,-46,-73,52,-26,52,52,52,52,52,]),'LOGICAL_OR':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,53,-32,-63,-65,-66,-67,-68,-69,-70,53,-2,-40,53,53,-27,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-73,53,-26,53,53,53,53,53,]),'LOGICAL_EQUAL':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,54,-32,-63,-65,-66,-67,-68,-69,-70,54,-2,-40,54,54,-27,-33,-34,-35,-36,54,54,None,-41,-42,None,-44,-45,-46,-73,54,-26,54,54,54,54,54,]),'GREATER_THAN':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,55,-32,-63,-65,-66,-67,-68,-69,-70,55,-2,-40,55,55,-27,-33,-34,-35,-36,55,55,55,None,None,55,None,None,-46,-73,55,-26,55,55,55,55,55,]),'LESS_THAN':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,56,-32,-63,-65,-66,-67,-68,-69,-70,56,-2,-40,56,56,-27,-33,-34,-35,-36,56,56,56,None,None,56,None,None,-46,-73,56,-26,56,56,56,56,56,]),'NOT_EQUAL':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,57,-32,-63,-65,-66,-67,-68,-69,-70,57,-2,-40,57,57,-27,-33,-34,-35,-36,57,57,None,-41,-42,None,-44,-45,-46,-73,57,-26,57,57,57,57,57,]),'GREATER_THAN_EQUAL':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,58,-32,-63,-65,-66,-67,-68,-69,-70,58,-2,-40,58,58,-27,-33,-34,-35,-36,58,58,58,None,None,58,None,None,-46,-73,58,-26,58,58,58,58,58,]),'LESS_THAN_EQUAL':([26,27,29,32,33,34,35,36,37,38,41,60,61,62,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,113,130,134,135,136,139,],[-64,59,-32,-63,-65,-66,-67,-68,-69,-70,59,-2,-40,59,59,-27,-33,-34,-35,-36,59,59,59,None,None,59,None,None,-46,-73,59,-26,59,59,59,59,59,]),'RANGE':([26,32,33,34,35,36,37,38,73,89,113,148,],[-64,-63,-65,-66,-67,-68,-69,-70,-27,-73,-26,150,]),'STEP':([26,32,33,34,35,36,37,38,73,89,113,152,],[-64,-63,-65,-66,-67,-68,-69,-70,-27,-73,-26,153,]),'ELSE':([96,117,145,],[-18,-19,149,]),'IN':([138,],[143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([0,],[2,]),'declaration':([0,2,70,97,],[3,9,99,99,]),'variable_declaration':([0,2,70,97,],[4,4,4,4,]),'function_declaration':([0,2,70,97,],[5,5,5,5,]),'semis':([4,5,100,101,102,103,104,105,106,],[10,13,119,120,121,122,123,124,125,]),'empty':([4,5,100,101,102,103,104,105,106,],[12,12,12,12,12,12,12,12,12,]),'type':([17,19,65,68,92,],[22,40,91,95,115,]),'expression':([18,20,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,64,111,126,127,128,131,],[27,41,60,61,62,71,76,77,78,79,80,81,82,83,84,85,86,87,90,130,134,135,136,139,]),'term':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[29,29,29,29,29,29,75,29,29,29,29,29,29,29,29,29,29,29,29,29,29,75,29,29,29,29,148,152,154,]),'Literal':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'function_calling':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,70,97,111,114,126,127,128,131,143,150,153,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,100,100,33,33,33,33,33,33,33,33,33,]),'readline':([18,20,28,30,31,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,111,114,126,127,128,131,143,150,153,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'parameter_list_declaration':([21,],[43,]),'parameter_declaration':([21,67,],[45,94,]),'block':([44,66,95,115,140,141,142,149,],[69,93,116,133,145,146,147,151,]),'parameter_list_calling':([47,],[72,]),'parameter_calling':([47,114,],[74,132,]),'statement_list':([70,],[97,]),'statement':([70,97,],[98,118,]),'if_statement':([70,97,],[101,101,]),'while_statement':([70,97,],[102,102,]),'for_statement':([70,97,],[103,103,]),'assignment':([70,97,],[104,104,]),'return_statement':([70,97,],[105,105,]),'print_statement':([70,97,],[106,106,]),'range_operator':([129,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',24),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','parser.py',30),
  ('program -> declarations','program',1,'p_program','parser.py',36),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',41),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',42),
  ('declarations -> declaration','declarations',1,'p_declarations','parser.py',51),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','parser.py',52),
  ('declaration -> variable_declaration semis','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> function_declaration semis','declaration',2,'p_declaration','parser.py',62),
  ('statement -> declaration','statement',1,'p_statement','parser.py',67),
  ('statement -> function_calling semis','statement',2,'p_statement','parser.py',68),
  ('statement -> if_statement semis','statement',2,'p_statement','parser.py',69),
  ('statement -> while_statement semis','statement',2,'p_statement','parser.py',70),
  ('statement -> for_statement semis','statement',2,'p_statement','parser.py',71),
  ('statement -> assignment semis','statement',2,'p_statement','parser.py',72),
  ('statement -> return_statement semis','statement',2,'p_statement','parser.py',73),
  ('statement -> print_statement semis','statement',2,'p_statement','parser.py',74),
  ('block -> LBRACE RBRACE','block',2,'p_block','parser.py',79),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',80),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',88),
  ('assignment -> ID EQUAL expression','assignment',3,'p_assignment','parser.py',94),
  ('function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type block','function_declaration',8,'p_function_declaration','parser.py',101),
  ('function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN block','function_declaration',6,'p_function_declaration','parser.py',102),
  ('function_declaration -> FUN ID LPAREN RPAREN COLONS type block','function_declaration',7,'p_function_declaration','parser.py',103),
  ('function_declaration -> FUN ID LPAREN RPAREN block','function_declaration',5,'p_function_declaration','parser.py',104),
  ('function_calling -> ID LPAREN parameter_list_calling RPAREN','function_calling',4,'p_function_calling','parser.py',118),
  ('function_calling -> ID LPAREN RPAREN','function_calling',3,'p_function_calling','parser.py',119),
  ('parameter_list_calling -> parameter_calling','parameter_list_calling',1,'p_parameter_list_calling','parser.py',129),
  ('parameter_list_calling -> parameter_list_calling COMMA parameter_calling','parameter_list_calling',3,'p_parameter_list_calling','parser.py',130),
  ('parameter_list_declaration -> parameter_declaration','parameter_list_declaration',1,'p_parameter_list_declaration','parser.py',139),
  ('parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration','parameter_list_declaration',3,'p_parameter_list_declaration','parser.py',140),
  ('expression -> term','expression',1,'p_expression','parser.py',149),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',150),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',151),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',152),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',153),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression','parser.py',154),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression','parser.py',155),
  ('expression -> expression LOGICAL_EQUAL expression','expression',3,'p_expression','parser.py',156),
  ('expression -> LOGICAL_NOT expression','expression',2,'p_expression','parser.py',157),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','parser.py',158),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','parser.py',159),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','parser.py',160),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','parser.py',161),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','parser.py',162),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',163),
  ('parameter_calling -> term','parameter_calling',1,'p_parameter_calling','parser.py',178),
  ('parameter_declaration -> ID COLONS type','parameter_declaration',3,'p_parameter_declaration','parser.py',183),
  ('if_statement -> IF LPAREN expression RPAREN block','if_statement',5,'p_if_statement','parser.py',189),
  ('if_statement -> IF LPAREN expression RPAREN block ELSE block','if_statement',7,'p_if_statement','parser.py',190),
  ('while_statement -> WHILE LPAREN expression RPAREN block','while_statement',5,'p_while_statement','parser.py',199),
  ('for_statement -> FOR LPAREN range_operator RPAREN block','for_statement',5,'p_for_statement','parser.py',204),
  ('range_operator -> ID IN term RANGE term','range_operator',5,'p_range_operator','parser.py',209),
  ('range_operator -> ID IN term RANGE term STEP term','range_operator',7,'p_range_operator','parser.py',210),
  ('variable_declaration -> VAL ID COLONS type EQUAL expression','variable_declaration',6,'p_variable_declaration','parser.py',219),
  ('variable_declaration -> VAR ID COLONS type EQUAL expression','variable_declaration',6,'p_variable_declaration','parser.py',220),
  ('variable_declaration -> VAL ID EQUAL expression','variable_declaration',4,'p_variable_declaration','parser.py',221),
  ('variable_declaration -> VAR ID EQUAL expression','variable_declaration',4,'p_variable_declaration','parser.py',222),
  ('type -> INT','type',1,'p_type','parser.py',231),
  ('type -> STRING','type',1,'p_type','parser.py',232),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',233),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print','parser.py',239),
  ('term -> Literal','term',1,'p_term','parser.py',244),
  ('term -> ID','term',1,'p_term','parser.py',245),
  ('term -> function_calling','term',1,'p_term','parser.py',246),
  ('term -> readline','term',1,'p_term','parser.py',247),
  ('Literal -> INTEGER_LITERAL','Literal',1,'p_literal','parser.py',256),
  ('Literal -> TRUE','Literal',1,'p_literal','parser.py',257),
  ('Literal -> FALSE','Literal',1,'p_literal','parser.py',258),
  ('Literal -> STRING_LITERAL','Literal',1,'p_literal','parser.py',259),
  ('semis -> SEMICOLON','semis',1,'p_semis','parser.py',265),
  ('semis -> empty','semis',1,'p_semis','parser.py',266),
  ('readline -> READLINE LPAREN RPAREN','readline',3,'p_readline','parser.py',270),
]
