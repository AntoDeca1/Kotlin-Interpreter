
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALleftLOGICAL_ORleftLOGICAL_ANDnonassocLOGICAL_EQUALNOT_EQUALnonassocLESS_THANGREATER_THANLESS_THAN_EQUALGREATER_THAN_EQUALleftPLUSMINUSleftTIMESDIVIDErightLOGICAL_NOTUMINUSBOOLEAN COLONS COMMA DIVIDE ELSE EMPTY EQUAL FALSE FUN GREATER_THAN GREATER_THAN_EQUAL ID IF INT INTEGER_LITERAL LBRACE LESS_THAN LESS_THAN_EQUAL LOGICAL_AND LOGICAL_EQUAL LOGICAL_NOT LOGICAL_OR LPAREN MINUS NEWLINE NOT_EQUAL PLUS PRINT RBRACE READLINE RETURN RPAREN STRING STRING_LITERAL TIMES TRUE VAL VAR WHILEexpression : MINUS expression %prec UMINUSprogram : statement_liststatement_list : statement\n                     | statement_list statementstatement : variable_declaration\n                 | function_declaration\n                 | function_calling\n                 | if_statement\n                 | while_statement\n                 | assignment\n                 | return_statement\n                 | print_statementsync : NEWLINEreturn_statement : RETURN expressionassignment : ID EQUAL expressionfunction_declaration : FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE\n                            | FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE\n                            | FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACEfunction_calling : ID LPAREN parameter_list_calling RPAREN\n                        | VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN\n                        | VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN\n                        | VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN\n                        | VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN\n                        | ID EQUAL ID LPAREN parameter_list_calling RPARENparameter_list_calling : parameter_calling\n                              | parameter_list_calling COMMA parameter_callingparameter_list_declaration : parameter_declaration\n                                  | parameter_list_declaration COMMA parameter_declarationparameter_calling : termparameter_declaration : ID COLONS typeif_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE\n                    | IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE\n                    | IF LPAREN expression RPAREN LBRACE RBRACEwhile_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE\n                       | WHILE LPAREN expression RPAREN LBRACE RBRACEvariable_declaration : VAL ID COLONS type EQUAL expression\n                            | VAR ID COLONS type EQUAL expression\n                            | VAL ID EQUAL expression\n                            | VAR ID EQUAL expression   type : INT\n             | STRING\n             | BOOLEANexpression : term\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression LOGICAL_AND expression\n                  | expression LOGICAL_OR expression\n                  | expression LOGICAL_EQUAL expression\n                  | LOGICAL_NOT expression\n                  | expression GREATER_THAN expression\n                  | expression LESS_THAN expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN_EQUAL expression\n                  | expression LESS_THAN_EQUAL expression\n                  | LPAREN expression RPAREN print_statement : PRINT LPAREN expression RPARENterm : Literal\n            | IDLiteral : INTEGER_LITERAL\n                | TRUE\n                | FALSE\n                | STRING_LITERAL'
    
_lr_action_items = {'VAL':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[12,12,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,12,12,-63,-39,-24,-63,-40,12,12,-36,12,-38,-22,-23,12,-18,-31,-37,12,-17,12,-20,-21,12,12,-35,12,-16,12,-34,-33,-32,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[14,14,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,14,14,-63,-39,-24,-63,-40,14,14,-36,14,-38,-22,-23,14,-18,-31,-37,14,-17,14,-20,-21,14,14,-35,14,-16,14,-34,-33,-32,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,15,15,-63,-39,-24,-63,-40,15,15,-36,15,-38,-22,-23,15,-18,-31,-37,15,-17,15,-20,-21,15,15,-35,15,-16,15,-34,-33,-32,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,18,20,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,107,108,109,110,111,113,114,115,119,121,122,123,124,125,126,127,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[13,13,-3,-5,-6,-7,-8,-9,-10,-11,-12,21,24,25,34,-4,34,45,34,34,-14,34,-46,34,34,-62,-63,-64,-65,-66,-67,34,72,-63,-15,78,80,34,34,34,34,34,34,34,34,34,34,34,34,-1,-54,-63,-41,-19,34,34,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,110,34,114,34,80,13,13,-63,-39,-24,-63,-40,13,13,-36,13,-38,34,-22,34,-23,13,-18,-31,-37,13,-17,13,-20,-21,13,13,-35,13,-16,13,-34,-33,-32,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,16,16,-63,-39,-24,-63,-40,16,16,-36,16,-38,-22,-23,16,-18,-31,-37,16,-17,16,-20,-21,16,16,-35,16,-16,16,-34,-33,-32,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,17,17,-63,-39,-24,-63,-40,17,17,-36,17,-38,-22,-23,17,-18,-31,-37,17,-17,17,-20,-21,17,17,-35,17,-16,17,-34,-33,-32,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,18,18,-63,-39,-24,-63,-40,18,18,-36,18,-38,-22,-23,18,-18,-31,-37,18,-17,18,-20,-21,18,18,-35,18,-16,18,-34,-33,-32,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,19,19,-63,-39,-24,-63,-40,19,19,-36,19,-38,-22,-23,19,-18,-31,-37,19,-17,19,-20,-21,19,19,-35,19,-16,19,-34,-33,-32,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,111,113,114,115,122,124,126,128,131,132,134,138,141,142,145,147,149,150,151,],[0,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,-63,-39,-24,-63,-40,-36,-38,-22,-23,-18,-31,-37,-17,-20,-21,-35,-16,-34,-33,-32,]),'RBRACE':([3,4,5,6,7,8,9,10,11,20,28,30,33,34,35,36,37,38,45,46,64,65,72,73,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,113,114,115,119,121,122,123,124,126,128,130,131,132,134,138,140,141,142,143,144,145,146,147,148,149,150,151,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-14,-46,-62,-63,-64,-65,-66,-67,-63,-15,-1,-54,-63,-41,-19,-63,-42,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-61,122,124,-63,-39,-24,-63,-40,131,132,-36,134,-38,-22,-23,138,-18,-31,-37,-17,145,-20,-21,147,149,-35,150,-16,151,-34,-33,-32,]),'LPAREN':([13,16,17,18,19,23,25,26,27,29,31,32,39,41,45,48,52,53,54,55,56,57,58,59,60,61,62,63,72,78,99,103,110,114,],[22,26,27,32,39,32,49,32,32,32,32,32,32,32,76,32,32,32,32,32,32,32,32,32,32,32,32,32,100,104,32,32,125,127,]),'EQUAL':([13,21,24,68,69,70,71,77,],[23,41,48,99,-43,-44,-45,103,]),'MINUS':([18,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,110,111,114,115,],[29,29,29,29,53,29,-46,29,29,-62,-63,-64,-65,-66,-67,29,29,-63,53,29,53,53,29,29,29,29,29,29,29,29,29,29,29,29,-1,-54,53,53,-63,53,-63,53,-47,-48,-49,-50,53,53,53,53,53,53,53,53,-60,29,29,-63,53,-63,53,]),'LOGICAL_NOT':([18,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,99,103,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTEGER_LITERAL':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TRUE':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FALSE':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'STRING_LITERAL':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'COLONS':([21,24,80,106,],[40,47,105,118,]),'PLUS':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[52,-46,-62,-63,-64,-65,-66,-67,-63,52,52,52,-1,-54,52,52,-63,52,-63,52,-47,-48,-49,-50,52,52,52,52,52,52,52,52,-60,-63,52,-63,52,]),'TIMES':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[54,-46,-62,-63,-64,-65,-66,-67,-63,54,54,54,-1,-54,54,54,-63,54,-63,54,54,54,-49,-50,54,54,54,54,54,54,54,54,-60,-63,54,-63,54,]),'DIVIDE':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[55,-46,-62,-63,-64,-65,-66,-67,-63,55,55,55,-1,-54,55,55,-63,55,-63,55,55,55,-49,-50,55,55,55,55,55,55,55,55,-60,-63,55,-63,55,]),'LOGICAL_AND':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[56,-46,-62,-63,-64,-65,-66,-67,-63,56,56,56,-1,-54,56,56,-63,56,-63,56,-47,-48,-49,-50,-51,56,-53,-55,-56,-57,-58,-59,-60,-63,56,-63,56,]),'LOGICAL_OR':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[57,-46,-62,-63,-64,-65,-66,-67,-63,57,57,57,-1,-54,57,57,-63,57,-63,57,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-63,57,-63,57,]),'LOGICAL_EQUAL':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[58,-46,-62,-63,-64,-65,-66,-67,-63,58,58,58,-1,-54,58,58,-63,58,-63,58,-47,-48,-49,-50,58,58,None,-55,-56,None,-58,-59,-60,-63,58,-63,58,]),'GREATER_THAN':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[59,-46,-62,-63,-64,-65,-66,-67,-63,59,59,59,-1,-54,59,59,-63,59,-63,59,-47,-48,-49,-50,59,59,59,None,None,59,None,None,-60,-63,59,-63,59,]),'LESS_THAN':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[60,-46,-62,-63,-64,-65,-66,-67,-63,60,60,60,-1,-54,60,60,-63,60,-63,60,-47,-48,-49,-50,60,60,60,None,None,60,None,None,-60,-63,60,-63,60,]),'NOT_EQUAL':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[61,-46,-62,-63,-64,-65,-66,-67,-63,61,61,61,-1,-54,61,61,-63,61,-63,61,-47,-48,-49,-50,61,61,None,-55,-56,None,-58,-59,-60,-63,61,-63,61,]),'GREATER_THAN_EQUAL':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[62,-46,-62,-63,-64,-65,-66,-67,-63,62,62,62,-1,-54,62,62,-63,62,-63,62,-47,-48,-49,-50,62,62,62,None,None,62,None,None,-60,-63,62,-63,62,]),'LESS_THAN_EQUAL':([28,30,33,34,35,36,37,38,45,46,50,51,64,65,66,67,72,73,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,114,115,],[63,-46,-62,-63,-64,-65,-66,-67,-63,63,63,63,-1,-54,63,63,-63,63,-63,63,-47,-48,-49,-50,63,63,63,None,None,63,None,None,-60,-63,63,-63,63,]),'RPAREN':([30,33,34,35,36,37,38,42,43,44,50,51,64,65,66,67,69,70,71,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,112,116,117,120,135,136,],[-46,-62,-63,-64,-65,-66,-67,74,-25,-29,83,84,-1,-54,97,98,-43,-44,-45,106,-27,-47,-48,-49,-50,-51,-52,-53,-55,-56,-57,-58,-59,-60,-26,113,126,128,-30,-28,141,142,]),'COMMA':([33,34,35,36,37,38,42,43,44,69,70,71,81,82,101,102,112,116,117,120,135,136,],[-62,-63,-64,-65,-66,-67,75,-25,-29,-43,-44,-45,107,-27,-26,75,75,75,-30,-28,75,75,]),'INT':([40,47,105,118,],[69,69,69,69,]),'STRING':([40,47,105,118,],[70,70,70,70,]),'BOOLEAN':([40,47,105,118,],[71,71,71,71,]),'LBRACE':([69,70,71,83,84,106,129,133,139,],[-43,-44,-45,108,109,119,137,140,144,]),'ELSE':([122,132,],[133,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,108,109,119,137,140,144,],[2,121,123,130,143,146,148,]),'statement':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[3,20,3,3,3,20,20,20,3,3,20,3,20,20,]),'variable_declaration':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'function_declaration':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'function_calling':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_statement':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_statement':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'assignment':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'print_statement':([0,2,108,109,119,121,123,130,137,140,143,144,146,148,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'expression':([18,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,99,103,],[28,46,50,51,64,65,66,67,73,79,85,86,87,88,89,90,91,92,93,94,95,96,111,115,]),'term':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[30,44,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,44,44,30,44,30,44,44,44,]),'Literal':([18,22,23,26,27,29,31,32,39,41,48,52,53,54,55,56,57,58,59,60,61,62,63,75,76,99,100,103,104,125,127,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'parameter_list_calling':([22,76,100,104,125,127,],[42,102,112,116,135,136,]),'parameter_calling':([22,75,76,100,104,125,127,],[43,101,43,43,43,43,43,]),'type':([40,47,105,118,],[68,77,117,129,]),'parameter_list_declaration':([49,],[81,]),'parameter_declaration':([49,107,],[82,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','parserv2.py',23),
  ('program -> statement_list','program',1,'p_program','parserv2.py',28),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parserv2.py',33),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parserv2.py',34),
  ('statement -> variable_declaration','statement',1,'p_statement','parserv2.py',43),
  ('statement -> function_declaration','statement',1,'p_statement','parserv2.py',44),
  ('statement -> function_calling','statement',1,'p_statement','parserv2.py',45),
  ('statement -> if_statement','statement',1,'p_statement','parserv2.py',46),
  ('statement -> while_statement','statement',1,'p_statement','parserv2.py',47),
  ('statement -> assignment','statement',1,'p_statement','parserv2.py',48),
  ('statement -> return_statement','statement',1,'p_statement','parserv2.py',49),
  ('statement -> print_statement','statement',1,'p_statement','parserv2.py',50),
  ('sync -> NEWLINE','sync',1,'p_sync','parserv2.py',56),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parserv2.py',62),
  ('assignment -> ID EQUAL expression','assignment',3,'p_assignment','parserv2.py',68),
  ('function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN COLONS type LBRACE statement_list RBRACE','function_declaration',10,'p_function_declaration','parserv2.py',74),
  ('function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE statement_list RBRACE','function_declaration',8,'p_function_declaration','parserv2.py',75),
  ('function_declaration -> FUN ID LPAREN parameter_list_declaration RPAREN LBRACE RBRACE','function_declaration',7,'p_function_declaration','parserv2.py',76),
  ('function_calling -> ID LPAREN parameter_list_calling RPAREN','function_calling',4,'p_function_calling','parserv2.py',87),
  ('function_calling -> VAL ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN','function_calling',9,'p_function_calling','parserv2.py',88),
  ('function_calling -> VAR ID COLONS type EQUAL ID LPAREN parameter_list_calling RPAREN','function_calling',9,'p_function_calling','parserv2.py',89),
  ('function_calling -> VAL ID EQUAL ID LPAREN parameter_list_calling RPAREN','function_calling',7,'p_function_calling','parserv2.py',90),
  ('function_calling -> VAR ID EQUAL ID LPAREN parameter_list_calling RPAREN','function_calling',7,'p_function_calling','parserv2.py',91),
  ('function_calling -> ID EQUAL ID LPAREN parameter_list_calling RPAREN','function_calling',6,'p_function_calling','parserv2.py',92),
  ('parameter_list_calling -> parameter_calling','parameter_list_calling',1,'p_parameter_list_calling','parserv2.py',114),
  ('parameter_list_calling -> parameter_list_calling COMMA parameter_calling','parameter_list_calling',3,'p_parameter_list_calling','parserv2.py',115),
  ('parameter_list_declaration -> parameter_declaration','parameter_list_declaration',1,'p_parameter_list_declaration','parserv2.py',124),
  ('parameter_list_declaration -> parameter_list_declaration COMMA parameter_declaration','parameter_list_declaration',3,'p_parameter_list_declaration','parserv2.py',125),
  ('parameter_calling -> term','parameter_calling',1,'p_parameter_calling','parserv2.py',134),
  ('parameter_declaration -> ID COLONS type','parameter_declaration',3,'p_parameter_declaration','parserv2.py',140),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parserv2.py',148),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parserv2.py',149),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE statement_list RBRACE','if_statement',10,'p_if_statement','parserv2.py',150),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE RBRACE','if_statement',10,'p_if_statement','parserv2.py',151),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE ELSE LBRACE RBRACE','if_statement',9,'p_if_statement','parserv2.py',152),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE RBRACE','if_statement',6,'p_if_statement','parserv2.py',153),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parserv2.py',172),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE RBRACE','while_statement',6,'p_while_statement','parserv2.py',173),
  ('variable_declaration -> VAL ID COLONS type EQUAL expression','variable_declaration',6,'p_variable_declaration','parserv2.py',181),
  ('variable_declaration -> VAR ID COLONS type EQUAL expression','variable_declaration',6,'p_variable_declaration','parserv2.py',182),
  ('variable_declaration -> VAL ID EQUAL expression','variable_declaration',4,'p_variable_declaration','parserv2.py',183),
  ('variable_declaration -> VAR ID EQUAL expression','variable_declaration',4,'p_variable_declaration','parserv2.py',184),
  ('type -> INT','type',1,'p_type','parserv2.py',193),
  ('type -> STRING','type',1,'p_type','parserv2.py',194),
  ('type -> BOOLEAN','type',1,'p_type','parserv2.py',195),
  ('expression -> term','expression',1,'p_expression','parserv2.py',200),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parserv2.py',201),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parserv2.py',202),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parserv2.py',203),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parserv2.py',204),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression','parserv2.py',205),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression','parserv2.py',206),
  ('expression -> expression LOGICAL_EQUAL expression','expression',3,'p_expression','parserv2.py',207),
  ('expression -> LOGICAL_NOT expression','expression',2,'p_expression','parserv2.py',208),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','parserv2.py',209),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','parserv2.py',210),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','parserv2.py',211),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','parserv2.py',212),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','parserv2.py',213),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parserv2.py',214),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print','parserv2.py',230),
  ('term -> Literal','term',1,'p_term','parserv2.py',235),
  ('term -> ID','term',1,'p_term','parserv2.py',236),
  ('Literal -> INTEGER_LITERAL','Literal',1,'p_literal','parserv2.py',244),
  ('Literal -> TRUE','Literal',1,'p_literal','parserv2.py',245),
  ('Literal -> FALSE','Literal',1,'p_literal','parserv2.py',246),
  ('Literal -> STRING_LITERAL','Literal',1,'p_literal','parserv2.py',247),
]
